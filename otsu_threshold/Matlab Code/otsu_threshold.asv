function thresholded = otsu_threshold(image, block_size, weight_factor)
    
    % Calculate Otsu's threshold using block-wise processing
    [rows, cols] = size(image);
    thresholded = zeros(rows, cols, 'uint8');
    
    for i = 1:block_size:rows
        for j = 1:block_size:cols
            block = image(i:min(i+block_size-1,rows), j:min(j+block_size-1,cols));
            
            % Compute Otsu's threshold for the block
            threshold = graythresh(block) * weight_factor;
            
           % Apply the threshold to the block
           thresholded_block = uint8(thresholded(i:min(i+block_size-1,rows), j:min(j+block_size-1,cols)));
           thresholded_block = thresholded_block + uint8(block > threshold);
           thresholded(i:min(i+block_size-1,rows), j:min(j+block_size-1,cols)) = thresholded_block;

        end
    end
end
